# system configuration
system:
  env: local # 修改为public可以关闭路由日志输出
  addr:
  port: 8888
  use-https: false
  db-type: mysql
  oss-type: local
  use-redis: false # 使用redis
  use-mongo: false     # 使用mongo
  use-multipoint: false
  # IP限制次数 一个小时15000次
  iplimit-count: 15000
  # IP限制一个小时
  iplimit-time: 3600
  # 路由全局前缀
  router-prefix: ""
  # 是否初始化mysql数据库
  mysql-init-data: true
  # Admin 密码
  admin-password: "123456"

# jwt configuration
jwt:
  signing-key: lazybearlee
  expires-time: 7d
  buffer-time: 1d
  issuer: lazybearlee

# zap logger configuration
zap:
  level: info
  format: console
  prefix: "[YueDong-fitness]"
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true
  retention-day: -1

# redis configuration
redis:
  #是否使用redis集群模式
  useCluster: false
  #使用集群模式addr和db默认无效
  addr: 127.0.0.1:6379
  password: ""
  db: 0
  clusterAddrs:
    - "172.21.0.3:7000"
    - "172.21.0.4:7001"
    - "172.21.0.2:7002"

# email configuration
email:
  to: xxx@qq.com
  port: 465
  from: 17775816748@163.com
  host: smtp.163.com
  is-ssl: true
  secret: UQOTZLCUCATVQDFJ
  nickname: 悦动健身
  code-time-out: 5m

# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80
  open-captcha: 8 # 0代表一直开启，大于0代表限制次数
  open-captcha-timeout: 300 # open-captcha大于0时才生效

# mysql connect configuration
mysql:
  path: ""
  port: "3306"
  config: "charset=utf8mb4&parseTime=True&loc=Local"
  db-name: "fitness-test"
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# local configuration
local:
  path: oss/uploads
  store-path: oss/uploads

# qiniu configuration
qiniu:
  zone: ZoneHuaBei
  bucket: ""
  img-path: "img"
  use-https: false
  access-key: ""
  secret-key: ""
  use-cdn-domains: false

# 跨域配置
# 需要配合 server/initialize/router.go -> `Router.Use(middleware.CorsByRules())` 使用
cors:
  mode: strict-whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type

      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值